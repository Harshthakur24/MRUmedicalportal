generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                   String    @id @default(cuid())
  name                 String
  email                String    @unique
  password             String
  role                 Role      @default(STUDENT)
  rollNumber           String    @unique
  department           String
  year                 Int
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  resetPasswordToken   String?
  verificationToken    String?
  emailVerified        DateTime?
  resetPasswordExpires DateTime?

  // Relations
  submittedReports MedicalReport[] @relation("SubmittedReports")
  reviewedReports  MedicalReport[] @relation("ReviewedReports")
}

model MedicalReport {
  id                 String   @id @default(cuid())
  studentId          String
  student            Student  @relation("SubmittedReports", fields: [studentId], references: [id])
  dateOfAbsence      DateTime
  dateTo             DateTime
  reason             String   @db.Text
  doctorName         String
  doctorAddress      String
  medicalCertificate String
  otherReports       String[]
  status             Status   @default(PENDING)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  reviewerId         String?
  reviewer           Student? @relation("ReviewedReports", fields: [reviewerId], references: [id])

  // New fields
  parentName     String
  parentContact  String
  studentContact String
  class          String
  section        String
  disease        String
  workingDays    Int
  t1Reexam       Boolean @default(false)
  t1Subjects     String?
  t2Reexam       Boolean @default(false)
  t2Subjects     String?
  dischargeSlip  String?
  opdIpdSlip     String?

  @@index([studentId])
}

enum Role {
  ADMIN
  HOD
  STUDENT
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
